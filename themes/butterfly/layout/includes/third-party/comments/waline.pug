- const { serverURL, option, pageview } = theme.waline
- const { lazyload, count, use } = theme.comments

script.
  (() => {
    const initWaline = () => {
      const waline = Waline.init(Object.assign({
        el: '#waline-wrap',
        serverURL: '!{serverURL}',
        pageview: !{lazyload ? false : pageview},
        dark: 'html[data-theme="dark"]',
        path: window.location.pathname,
        comment: !{lazyload ? false : count},
        imageUploader: (file) => {
          let formData = new FormData();
          let headers = new Headers();
          formData.append("file", file);
          formData.append("album_id", "92");
          formData.append("permission", "0");
          headers.append("Authorization", "Bearer 201|AMFfVSSJGfpoSh2JamKRKsvlOAp4teikamKGYoVn");
          headers.append("Accept", "application/json");
          return fetch("https://wmimg.com/api/v1/upload", {
            method: "POST",
            headers: headers,
            body: formData,
          })
            .then((resp) => resp.json())
            .then((resp) => resp.data.links.url);
        },
      }, !{JSON.stringify(option)}))

      const destroyWaline = () => {
        waline.destroy()
      }

      btf.addGlobalFn('pjax', destroyWaline, 'destroyWaline')

    }

    const loadWaline = async () => {
      if (typeof Waline === 'object') initWaline()
      else {
        await getCSS('!{url_for(theme.asset.waline_css)}')
        await getScript('!{url_for(theme.asset.waline_js)}')
        initWaline()
      }
    }

    if ('!{use[0]}' === 'Waline' || !!{lazyload}) {
      if (!{lazyload}) btf.loadComment(document.getElementById('waline-wrap'),loadWaline)
      else setTimeout(loadWaline, 0)
    } else {
      window.loadOtherComment = loadWaline
    }
  })()
